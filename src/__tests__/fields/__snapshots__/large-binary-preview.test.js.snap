// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getField for Form 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src="Test"
      style={
        Object {
          "opacity": 1,
        }
      }
    />
    <div
      style={
        Object {
          "left": "50%",
          "opacity": 0,
          "position": "absolute",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "transition": ".5s ease",
        }
      }
    >
      <ul
        className="list-inline"
      >
        <li>
          <div>
            <label
              htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
            >
              <a>
                <i
                  className="fa fa-upload fa-lg"
                />
              </a>
            </label>
            <input
              className="form-control"
              disabled={undefined}
              id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
              onChange={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              type="file"
            />
          </div>
        </li>
        <li>
          <a
            onClick={[Function]}
          >
            <i
              className="fa fa-trash fa-lg"
            />
          </a>
        </li>
        <li>
          <a
            download=""
            href="Test"
            target="_blank"
          >
            <i
              className="fa fa-download fa-lg"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`getField for Form 2 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div>
    <label
      htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    >
      <a>
        <i
          className="fa fa-upload fa-lg"
        />
      </a>
    </label>
    <input
      className="form-control"
      disabled={undefined}
      id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
      onChange={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      type="file"
    />
  </div>
</div>
`;

exports[`getField for Form readonly 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
    Test
  </label>
  <div
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src="Test"
      style={
        Object {
          "opacity": 1,
        }
      }
    />
    <div
      style={
        Object {
          "left": "50%",
          "opacity": 0,
          "position": "absolute",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "transition": ".5s ease",
        }
      }
    >
      <ul
        className="list-inline"
      >
        <li>
          <a
            download=""
            href="Test"
            target="_blank"
          >
            <i
              className="fa fa-download fa-lg"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`getField for Form readonly 2 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
    Test
  </label>
</div>
`;

exports[`getField for Form required 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={
      Object {
        "color": "#3f51b5",
      }
    }
  >
    Test
  </label>
  <div
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src="Test"
      style={
        Object {
          "opacity": 1,
        }
      }
    />
    <div
      style={
        Object {
          "left": "50%",
          "opacity": 0,
          "position": "absolute",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "transition": ".5s ease",
        }
      }
    >
      <ul
        className="list-inline"
      >
        <li>
          <div>
            <label
              htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
            >
              <a>
                <i
                  className="fa fa-upload fa-lg"
                />
              </a>
            </label>
            <input
              className="form-control"
              disabled={undefined}
              id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
              onChange={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              type="file"
            />
          </div>
        </li>
        <li>
          <a
            onClick={[Function]}
          >
            <i
              className="fa fa-trash fa-lg"
            />
          </a>
        </li>
        <li>
          <a
            download=""
            href="Test"
            target="_blank"
          >
            <i
              className="fa fa-download fa-lg"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`getField for Form required with empty value 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={
      Object {
        "color": "#3f51b5",
      }
    }
  >
    Test
  </label>
  <div>
    <label
      htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    >
      <a>
        <i
          className="fa fa-upload fa-lg"
        />
      </a>
    </label>
    <input
      className="form-control"
      disabled={undefined}
      id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
      onChange={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      type="file"
    />
  </div>
  <div>
    <span
      style={
        Object {
          "color": "#f44336",
        }
      }
    >
      This field is required
    </span>
  </div>
</div>
`;

exports[`getField for Form with filename 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src="Test"
      style={
        Object {
          "opacity": 1,
        }
      }
    />
    <div
      style={
        Object {
          "left": "50%",
          "opacity": 0,
          "position": "absolute",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "transition": ".5s ease",
        }
      }
    >
      <ul
        className="list-inline"
      >
        <li>
          <div>
            <label
              htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
            >
              <a>
                <i
                  className="fa fa-upload fa-lg"
                />
              </a>
            </label>
            <input
              className="form-control"
              disabled={undefined}
              id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
              onChange={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              type="file"
            />
          </div>
        </li>
        <li>
          <a
            onClick={[Function]}
          >
            <i
              className="fa fa-trash fa-lg"
            />
          </a>
        </li>
        <li>
          <a
            download=""
            href="Test"
            target="_blank"
          >
            <i
              className="fa fa-download fa-lg"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`getField for Form with filename 2 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div>
    <label
      htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    >
      <a>
        <i
          className="fa fa-upload fa-lg"
        />
      </a>
    </label>
    <input
      className="form-control"
      disabled={undefined}
      id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
      onChange={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      type="file"
    />
  </div>
</div>
`;

exports[`getField for Form with filename 3 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <img
      alt="File name"
      className="img-responsive img-thumbnail"
      src="Test"
      style={
        Object {
          "opacity": 1,
        }
      }
    />
    <div
      style={
        Object {
          "left": "50%",
          "opacity": 0,
          "position": "absolute",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "transition": ".5s ease",
        }
      }
    >
      <ul
        className="list-inline"
      >
        <li>
          <div>
            <label
              htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
            >
              <a>
                <i
                  className="fa fa-upload fa-lg"
                />
              </a>
            </label>
            <input
              className="form-control"
              disabled={undefined}
              id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
              onChange={[Function]}
              style={
                Object {
                  "display": "none",
                }
              }
              type="file"
            />
          </div>
        </li>
        <li>
          <a
            onClick={[Function]}
          >
            <i
              className="fa fa-trash fa-lg"
            />
          </a>
        </li>
        <li>
          <a
            download="File name"
            href="Test"
            target="_blank"
          >
            <i
              className="fa fa-download fa-lg"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`getField for Form with filename 4 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div>
    <label
      htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    >
      <a>
        <i
          className="fa fa-upload fa-lg"
        />
      </a>
    </label>
    <input
      className="form-control"
      disabled={undefined}
      id="view-type-Form-field_type-LargeBinaryPreview-field-name-"
      onChange={[Function]}
      style={
        Object {
          "display": "none",
        }
      }
      type="file"
    />
  </div>
</div>
`;

exports[`getField for Form with filename and readonly 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
  <div
    onMouseOut={[Function]}
    onMouseOver={[Function]}
  >
    <img
      alt="File name"
      className="img-responsive img-thumbnail"
      src="Test"
      style={
        Object {
          "opacity": 1,
        }
      }
    />
    <div
      style={
        Object {
          "left": "50%",
          "opacity": 0,
          "position": "absolute",
          "top": "50%",
          "transform": "translate(-50%, -50%)",
          "transition": ".5s ease",
        }
      }
    >
      <ul
        className="list-inline"
      >
        <li>
          <a
            download="File name"
            href="Test"
            target="_blank"
          >
            <i
              className="fa fa-download fa-lg"
            />
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`getField for Form with filename and readonly 2 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Form-field_type-LargeBinaryPreview-field-name-"
    style={Object {}}
  >
     
  </label>
</div>
`;

exports[`getField for List 1`] = `
<div>
  <a
    download=""
    href="Test"
    onClick={[Function]}
    target="_blank"
    title=""
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src="Test"
    />
  </a>
</div>
`;

exports[`getField for List 2 1`] = `
<div>
  <a
    download=""
    href=""
    onClick={[Function]}
    target="_blank"
    title=""
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src=""
    />
  </a>
</div>
`;

exports[`getField for List with filename 1`] = `
<div>
  <a
    download=""
    href="Test"
    onClick={[Function]}
    target="_blank"
    title=""
  >
    <img
      alt=""
      className="img-responsive img-thumbnail"
      src="Test"
    />
  </a>
</div>
`;

exports[`getField for List with filename 2 1`] = `
<div>
  <a
    download="File name"
    href="Test"
    onClick={[Function]}
    target="_blank"
    title="File name"
  >
    <img
      alt="File name"
      className="img-responsive img-thumbnail"
      src="Test"
    />
  </a>
</div>
`;

exports[`getField for Thumbnail 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Thumbnail-field_type-LargeBinaryPreview-field-name-"
  >
     
  </label>
  <div>
    <a
      download=""
      href="Test"
      onClick={[Function]}
      target="_blank"
      title=""
    >
      <img
        alt=""
        className="img-responsive img-thumbnail"
        src="Test"
      />
    </a>
  </div>
</div>
`;

exports[`getField for Thumbnail 2 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Thumbnail-field_type-LargeBinaryPreview-field-name-"
  >
     
  </label>
  <div>
    <a
      download=""
      href=""
      onClick={[Function]}
      target="_blank"
      title=""
    >
      <img
        alt=""
        className="img-responsive img-thumbnail"
        src=""
      />
    </a>
  </div>
</div>
`;

exports[`getField for Thumbnail with filename 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Thumbnail-field_type-LargeBinaryPreview-field-name-"
  >
     
  </label>
  <div>
    <a
      download=""
      href="Test"
      onClick={[Function]}
      target="_blank"
      title=""
    >
      <img
        alt=""
        className="img-responsive img-thumbnail"
        src="Test"
      />
    </a>
  </div>
</div>
`;

exports[`getField for Thumbnail with filename 2 1`] = `
<div
  className="form-group"
>
  <label
    htmlFor="view-type-Thumbnail-field_type-LargeBinaryPreview-field-name-"
  >
     
  </label>
  <div>
    <a
      download="File name"
      href="Test"
      onClick={[Function]}
      target="_blank"
      title="File name"
    >
      <img
        alt="File name"
        className="img-responsive img-thumbnail"
        src="Test"
      />
    </a>
  </div>
</div>
`;
